package com.mycompany.services.utils;import java.io.Serializable;public class Pagination implements Serializable{	/**	 * Objet permettant de connaître la pagination à partir d'une position	 */	private static final long serialVersionUID = 1L;		private int activePageNumber;	private int nbPhotos;	private int nbPage;		public Pagination(int activePageNumber,int nbPhotos)	{		this.nbPhotos = nbPhotos;		this.activePageNumber = activePageNumber;		updateNbPages();	}		int getLastPage()	{		return 1;	}		int getFirstPage()	{		return 1;	}	public int getActivePageNumber() {		return activePageNumber;	}	public void setActivePageNumber(int activePageNumber) {		this.activePageNumber = activePageNumber;	}	public int getPrevious() {				return activePageNumber<=1?1:activePageNumber-1;	}	public int getNext() {				return activePageNumber+1>nbPage?1:activePageNumber+1;	}	public int getNbPage() {		return nbPage;	}	public void setNbPage(int nbPage) {		this.nbPage = nbPage;	}		public void updateNbPages()	{		// On calcule le nombre de page à afficher		int lastPageNbPhotos = nbPhotos%Constant.PAGE_SIZE;		nbPage = (nbPhotos-lastPageNbPhotos)/Constant.PAGE_SIZE;		if(lastPageNbPhotos>0)		{			nbPage++;		}	}			private boolean isLastPage()	{		if(getNext()==1)		{			return true;		}				return false;	}		public int getNbPictures2Print()	{		if(isLastPage())		{			return nbPhotos==Constant.PAGE_SIZE?nbPhotos:nbPhotos%Constant.PAGE_SIZE;		}				return Constant.PAGE_SIZE;	}		public int getFileSystemStartRank()	{		return activePageNumber*Constant.PAGE_SIZE-Constant.PAGE_SIZE;	}		public int getNbFiles(boolean isLastPage)	{		if(isLastPage)		{			return nbPhotos%Constant.PAGE_SIZE;		}				return Constant.PAGE_SIZE;	}    /**     * @return the nbPhotos     */    public int getNbPhotos() {        return nbPhotos;    }    /**     * @param nbPhotos the nbPhotos to set     */    public void setNbPhotos(int nbPhotos) {        this.nbPhotos = nbPhotos;    }}