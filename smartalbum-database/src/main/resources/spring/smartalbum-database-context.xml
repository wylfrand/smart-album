<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://cxf.apache.org/jaxws 
                           http://cxf.apache.org/schemas/jaxws.xsd
                           http://www.springframework.org/schema/jdbc
                           http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/data/jpa
                           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- Définit la base de données utilisé dans le composant -->
	<context:annotation-config />
	<context:component-scan base-package="com.mycompany.database.smartalbum" />
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<!-- JPA -->
	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath:persistence.xml</value>
			</list>
		</property>
		<property name="dataSources">
			<map>
				<entry key="dataSource" value-ref="dataSource" />
			</map>
		</property>
		<property name="defaultDataSource" ref="dataSource" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="persistenceUnitName" value="jpaUnit" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="${smartalbum.jpa.db.type:H2}" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="javax.persistence.transactionType">RESOURCE_LOCAL</prop>
<!-- 				<prop key="hibernate.current_session_context_class">thread</prop> -->
				<prop key="hibernate.dialect">${smartalbum.jpa.db.hibernate.dialect:org.hibernate.dialect.H2Dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${smartalbum.jpa.db.hibernate.hbm2ddl.auto:create-drop}</prop>
				<prop key="hibernate.show_sql">${smartalbum.jpa.db.hibernate.showsql:false}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.validator.apply_to_ddl">false</prop>
				<prop key="hibernate.validator.autoregister_listeners">false</prop>
			</props>
		</property>
	</bean>

	<!-- GERER LES TRANSACTIONS -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<qualifier value="transactionManager" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- BASE DE DONNEES -->
	<!-- REEL -->
	<bean id="realDatasource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${smartalbum.database.driver:}" />
		<property name="url" value="${smartalbum.database.url:}" />
		<property name="username" value="${smartalbum.database.user:}" />
		<property name="password" value="${smartalbum.database.pwd:}" />
	</bean>

	<!-- BOUCHONNEE -->
	<jdbc:embedded-database id="smartalbumEmbeddedDataSource"
		type="H2" />

	<bean class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
		<property name="dataSource" ref="dataSource" />
		<property name="enabled" value="${smartalbum.database.embedded.init:false}" />
		<property name="databasePopulator">
			<bean
				class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
				<property name="continueOnError" value="false" />
				<property name="ignoreFailedDrops" value="true" />
				<property name="sqlScriptEncoding" value="UTF-8" />
				<property name="scripts">
					<array value-type="org.springframework.core.io.Resource">
						<value>classpath:/mock/database/short/smartalbum_schema.sql
						</value>
						<value>classpath:/mock/database/short/import.sql</value>
					</array>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="aclService"
		class="org.springframework.security.acls.jdbc.JdbcMutableAclService">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="lookupStrategy" />
		<constructor-arg ref="aclCache" />
		<property name="classIdentityQuery" value="SELECT @@IDENTITY"/>
		<property name="sidIdentityQuery" value="SELECT @@IDENTITY"/>		
	</bean>
	
	 <bean id="lookupStrategy" class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="aclCache"/>
        <constructor-arg ref="aclAuthorizationStrategy"/>
        <constructor-arg ref="auditLogger"/>
    </bean>
 
<!--     Declare an acl cache   -->
   <bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
        <constructor-arg>
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager">
                    <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                </property>
                <property name="cacheName" value="aclCache"/>
            </bean>
        </constructor-arg>
    </bean>
 
 <!-- Declare an acl authorization strategy -->
    <bean id="aclAuthorizationStrategy" class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMIN"/>
                </bean>
                <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMIN"/>
                </bean>
                <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMIN"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
  
  <!-- Declare an audit logger -->
    <bean id="auditLogger" class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
     
  <!-- http://static.springsource.org/spring-security/site/docs/3.0.x/apidocs/org/springframework/security/access/hierarchicalroles/RoleHierarchyImpl.html -->
 <bean id="roleHierarchy"  class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
     <property name="hierarchy">
         <value>
             ROLE_ADMIN > ROLE_USER
             ROLE_USER > ROLE_VISITOR
         </value>
     </property>
 </bean>
	<!-- MODE -->
	<jpa:repositories base-package="com.mycompany.database.smartalbum.repository" />
	
	<alias name="${smartalbum.datasource.mode:realDatasource}" alias="dataSource" />
</beans>